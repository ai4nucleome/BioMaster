{
    "input": "{\"task\": {\"step_number\": 1, \"description\": \"In this step, we will perform an LD decay analysis using PLINK. We will use the pruned genotype data provided in the bed, bim, and fam files to calculate pairwise linkage disequilibrium (r2) between SNPs over a sliding window across the genome. The command will be configured with a large ld-window size (number of SNPs) and a specific physical distance cutoff (e.g. 500 kb) to capture LD decay across distance. The output file (ld_decay.ld) will contain pairwise SNP comparisons with their corresponding r2 values and the physical distance between the SNPs. This output can then be analyzed (using alternative non-R methods if required) to plot or further study LD decay patterns.\", \"input_filename\": [\"./data/1000GP_pruned.bed: SNP file in bed format\", \"./data/1000GP_pruned.fam: data information, the first col is population, the second is sample ID\", \"./data/1000GP_pruned.bim\", \"./data/1000GP_pruned.bed\", \"./data/1000GP_pruned.fam\", \"./data/1000GP_pruned.bim: snp info associate with the bed format\"], \"output_filename\": [\"./output/001/ld_decay.ld: output file containing pairwise LD (r2) values and SNP distances for LD decay analysis\"], \"tools\": \"PLINK\"}, \"pre debug\": [\"{\\n  \\\"shell\\\": [\\n    \\\"mkdir -p ./output/001\\\",\\n    \\\"conda install -y plink\\\",\\n    \\\"plink --bfile ./data/1000GP_pruned --r2 --ld-window 99999 --ld-window-kb 500 --out ./output/001/ld_decay\\\"\\n  ],\\n  \\\"analyze\\\": \\\"Error indicates plink failed to open ld_decay log because output directory does not exist, directory creation command required\\\",\\n  \\\"output_filename\\\": [\\n    \\\"./output/001/ld_decay.ld\\\"\\n  ],\\n  \\\"stats\\\": false\\n}\"], \"result\": \"/home/agent/miniconda3/envs/AGENT/bin/python\\nChannels:\\n - bioconda\\n - conda-forge\\n - defaults\\nPlatform: linux-64\\nCollecting package metadata (repodata.json): ...working... done\\nSolving environment: ...working... done\\n\\n# All requested packages already installed.\\n\\nPLINK v1.9.0-b.7.7 64-bit (22 Oct 2024)            cog-genomics.org/plink/1.9/\\n(C) 2005-2024 Shaun Purcell, Christopher Chang   GNU General Public License v3\\nLogging to ./output/001/ld_decay.log.\\nOptions in effect:\\n  --bfile ./data/1000GP_pruned\\n  --ld-window 99999\\n  --ld-window-kb 500\\n  --out ./output/001/ld_decay\\n  --r2\\n\\n96295 MB RAM detected; reserving 48147 MB for main workspace.\\n170158 variants loaded from .bim file.\\n3202 people (0 males, 0 females, 3202 ambiguous) loaded from .fam.\\nAmbiguous sex IDs written to ./output/001/ld_decay.nosex .\\nUsing up to 31 threads (change this with --threads).\\nBefore main variant filters, 3202 founders and 0 nonfounders present.\\nCalculating allele frequencies... 0%\\b\\b1%\\b\\b2%\\b\\b3%\\b\\b4%\\b\\b5%\\b\\b6%\\b\\b7%\\b\\b8%\\b\\b9%\\b\\b10%\\b\\b\\b11%\\b\\b\\b12%\\b\\b\\b13%\\b\\b\\b14%\\b\\b\\b15%\\b\\b\\b16%\\b\\b\\b17%\\b\\b\\b18%\\b\\b\\b19%\\b\\b\\b20%\\b\\b\\b21%\\b\\b\\b22%\\b\\b\\b23%\\b\\b\\b24%\\b\\b\\b25%\\b\\b\\b26%\\b\\b\\b27%\\b\\b\\b28%\\b\\b\\b29%\\b\\b\\b30%\\b\\b\\b31%\\b\\b\\b32%\\b\\b\\b33%\\b\\b\\b34%\\b\\b\\b35%\\b\\b\\b36%\\b\\b\\b37%\\b\\b\\b38%\\b\\b\\b39%\\b\\b\\b40%\\b\\b\\b41%\\b\\b\\b42%\\b\\b\\b43%\\b\\b\\b44%\\b\\b\\b45%\\b\\b\\b46%\\b\\b\\b47%\\b\\b\\b48%\\b\\b\\b49%\\b\\b\\b50%\\b\\b\\b51%\\b\\b\\b52%\\b\\b\\b53%\\b\\b\\b54%\\b\\b\\b55%\\b\\b\\b56%\\b\\b\\b57%\\b\\b\\b58%\\b\\b\\b59%\\b\\b\\b60%\\b\\b\\b61%\\b\\b\\b62%\\b\\b\\b63%\\b\\b\\b64%\\b\\b\\b65%\\b\\b\\b66%\\b\\b\\b67%\\b\\b\\b68%\\b\\b\\b69%\\b\\b\\b70%\\b\\b\\b71%\\b\\b\\b72%\\b\\b\\b73%\\b\\b\\b74%\\b\\b\\b75%\\b\\b\\b76%\\b\\b\\b77%\\b\\b\\b78%\\b\\b\\b79%\\b\\b\\b80%\\b\\b\\b81%\\b\\b\\b82%\\b\\b\\b83%\\b\\b\\b84%\\b\\b\\b85%\\b\\b\\b86%\\b\\b\\b87%\\b\\b\\b88%\\b\\b\\b89%\\b\\b\\b90%\\b\\b\\b91%\\b\\b\\b92%\\b\\b\\b93%\\b\\b\\b94%\\b\\b\\b95%\\b\\b\\b96%\\b\\b\\b97%\\b\\b\\b98%\\b\\b\\b99%\\b\\b\\b\\b done.\\nTotal genotyping rate is in [0.9999995, 1).\\n170158 variants and 3202 people pass filters and QC.\\nNote: No phenotypes present.\\nRunning --r2 with the following filters:\\n  --ld-window: 99999\\n  --ld-window-kb: 500\\n  --ld-window-r2: 0.2\\n--r2 to ./output/001/ld_decay.ld ... 0% [processing]\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\bwriting]   \\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b          \\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\bdone.\\n\", \"related_docs\": \"For performing Treemix analysis with PLINK files (.bed, .bim, .fam), follow the steps below.All sample scripts such as plink2treemix.py and vcf2treemix.sh are in the current directory, i.e./plink2treemix.py and./vcf2treemix.sh. Simply modify the input and output file paths as necessary:\\n\\n1. Convert PLINK files to VCF format:\\n   ```plink --bfile ./data/1000GP_pruned --recode vcf --out ./output/094/1000GP_pruned```\\n   This command converts the PLINK files (`.bed`, `.bim`, `.fam`) into a VCF file (`1000GP_pruned.vcf`).\\n\\n2. Compress the VCF file using bgzip:\\n   ```bgzip ./output/094/1000GP_pruned.vcf```\\n   Compresses the VCF file to `.vcf.gz` format using `bgzip`.\\n\\n3. Remove variants with missing data using vcftools:\\n   ```vcftools --gzvcf ./output/094/1000GP_pruned.vcf.gz --max-missing 1 --recode --stdout | gzip > ./output/094/1000GP_pruned_no_missing.vcf.gz```\\n   Filters out variants with missing genotypes and generates a new compressed VCF file (`1000GP_pruned_no_missing.vcf.gz`).\\n\\n4. Perform LD pruning using PLINK:\\n   ```plink --vcf ./output/094/1000GP_pruned_no_missing.vcf.gz --indep-pairwise 50 5 0.2 --out ./output/094/1000GP_pruned_no_missing_LDpruned```\\n   Performs LD pruning to remove variants in high linkage disequilibrium based on the parameters (window size 50 SNPs, step size 5, r^2 threshold 0.2).\\n\\n5. Create a new VCF with LD-pruned SNPs:\\n   ```plink --vcf ./output/094/1000GP_pruned_no_missing.vcf.gz --extract ./output/094/1000GP_pruned_no_missing_LDpruned.prune.in --recode vcf --out ./output/094/1000GP_pruned_LDpruned```\\n   Generates a new VCF file (`1000GP_pruned_LDpruned.vcf`) containing only the pruned SNPs.\\n\\n6. Compress the LD-pruned VCF file using bgzip:\\n   ```bgzip ./output/094/1000GP_pruned_LDpruned.vcf```\\n   Compresses the LD-pruned VCF file to `.vcf.gz`.\\n\\n7. Generate a cluster file for Treemix:\\n   ```bcftools query -l ./output/094/1000GP_pruned_LDpruned.vcf.gz | awk 'BEGIN{OFS=\\\"\\\\t\\\"} {split($1,pop,\\\"_\\\"); print $1, $1, pop[1]}' > ./output/094/1000GP_pruned_LDpruned.clust```\\n   Creates a cluster file for Treemix, where the population is determined by the prefix of the sample ID.\\n\\n8. Run the `vcf2treemix.sh` script to prepare data for Treemix:\\n   ```bash vcf2treemix.sh ./output/094/1000GP_pruned_LDpruned.vcf.gz  ./output/094/1000GP_pruned_LDpruned.clust```\\n   Converts the VCF and cluster files into the format required for Treemix analysis.\\n\\n9. Run Treemix with different migration models:\\n   ```\\n   for i in {0..5}\\n   do\\n   treemix -i ./output/094/1000GP_pruned_LDpruned.treemix.frq.gz -m $i -o ./output/094/1000GP_no_missing_result -root GBR -bootstrap -k 500 -noss > treemix_${i}_log &\\n   done\\n   ```\\n   Runs Treemix with migration models ranging from 0 to 5, and saves the results in the specified output directory. The loop also generates log files for each model (e.g., `treemix_0_log`, `treemix_1_log`, etc.).\", \"id\": \"001\", \"shell\": [\"mkdir -p ./output/001\", \"conda install -y plink\", \"plink --bfile ./data/1000GP_pruned --r2 --ld-window 99999 --ld-window-kb 500 --out ./output/001/ld_decay\"]}"
}